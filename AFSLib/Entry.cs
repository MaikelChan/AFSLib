using System;
using System.IO;

namespace AFSLib
{
    public abstract class Entry
    {
        /// <summary>
        /// The real name of the entry.
        /// It can contain special characters like "/", "\" or ":", and it can be the same name as other entries.
        /// Don't use this name to extract a file into the operating system.
        /// It can't be longer than 32 characters, including extension.
        /// </summary>
        public string RawName => rawName;
        protected string rawName;

        /// <summary>
        /// An autogenerated name of the entry.
        /// It will be unique and won't contain special characters like "/", "\" or ":".
        /// You can safely use this to name extracted files into the operating system.
        /// </summary>
        public string Name => name;
        private string name;

        /// <summary>
        /// Size of the entry data.
        /// </summary>
        public uint Size => size;
        protected uint size;

        /// <summary>
        /// Date of the last time the entry was modified.
        /// </summary>
        public DateTime LastWriteTime => lastWriteTime;
        protected DateTime lastWriteTime;

        /// <summary>
        /// Sometimes it's the entry size, sometimes not?
        /// </summary>
        public uint Unknown => unknown;
        protected uint unknown;

        internal event Action RawNameChanged;

        /// <summary>
        /// Renames an entry.
        /// </summary>
        /// <param name="name">The new name to assign to the entry.</param>
        public void Rename(string name)
        {
            if (name.Length > AFS.MAX_ENTRY_NAME_LENGTH)
            {
                throw new ArgumentOutOfRangeException(nameof(name), $"Entry name can't be longer than {AFS.MAX_ENTRY_NAME_LENGTH} characters: \"{name}\".");
            }

            if (name == null)
            {
                name = string.Empty;
            }

            rawName = name;
            RawNameChanged?.Invoke();
        }

        internal void UpdateName(string name)
        {
            this.name = name;
        }

        internal abstract Stream GetStream();
    }
}